public class IteratorDemo implements Comparable<IteratorDemo> {

    String myName;
    int age;

    IteratorDemo(String myName, int age) {
        this.myName = myName;
        this.age = age;
    }

    public static void main(String[] args) {
        // Assignment 1
        printArrayIterator();

        // Assignment 2
        printLinkedListIterator();

        // Assignment 3
        demoComparator();

        // Assignment 4
        demoComparatable();
    }

    public static void printArrayIterator() {
        List<String> arrayListDemo = new ArrayList<String>();
        arrayListDemo.add("banana");
        arrayListDemo.add("apple");
        arrayListDemo.add("pear");
        arrayListDemo.add("pinapple");

        Iterator<String> itr = arrayListDemo.iterator();

        System.out.println("pg 1");
        while (itr.hasNext()) {
            String tempString = itr.next();
            System.out.print(tempString + " ! ");
        }
        System.out.println("");
    }

    public static void printLinkedListIterator() {
        List<String> arrayListDemo = new LinkedList<String>();
        arrayListDemo.add("banana");
        arrayListDemo.add("apple");
        arrayListDemo.add("pear");
        arrayListDemo.add("pinapple");

        Iterator<String> itr = arrayListDemo.iterator();

        System.out.println("pg 2");
        while (itr.hasNext()) {
            String tempString = itr.next();
            System.out.print(tempString + " !! ");
        }
        System.out.println("");
    }

    public static void demoComparator() {
        List<String> arrayListDemo = new LinkedList<String>();
        arrayListDemo.add("banana");
        arrayListDemo.add("apple");
        arrayListDemo.add("pear");
        arrayListDemo.add("pinapple");

        Comparator<String> lengthComparator = new Comparator<String>() {
            @Override
            public int compare(String t1, String t2) {
                if (t1.length() > t2.length()) {
                    return 1;
                } else {
                    return -1;
                }
            }
        };
        System.out.println("pg 3");
        arrayListDemo.sort(lengthComparator);
        arrayListDemo.forEach(s -> System.out.print(s + " !!! "));
        System.out.println("");
    }

    public static void demoComparatable() {
        List<IteratorDemo> iteratorDemoList = new LinkedList<IteratorDemo>();
        iteratorDemoList.add(new IteratorDemo("Saeko", 45));
        iteratorDemoList.add(new IteratorDemo("Taro", 95));

        System.out.println("pg 4");
        Collections.sort(iteratorDemoList);
        iteratorDemoList.forEach(s -> System.out.print(s.myName + " !!!! "));
        System.out.println("");
    }

    @Override
    public int compareTo(IteratorDemo t) {
        if (this.myName.length() > t.myName.length()) {
            return 1;
        } else {
            return -1;
        }
    }
}